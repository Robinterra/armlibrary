namespace "ARM.CortexM"
{
    using "System";

    public class IORegister
    {

        // -----------------------------------------------

        #region get/set

        // -----------------------------------------------

        public static Gpio PortA()
        {
            #defalgo IORegister,PortA:;
        }

        // -----------------------------------------------

        public static Gpio PortB()
        {
            #defalgo IORegister,PortB:;
        }

        // -----------------------------------------------

        public static Gpio PortC()
        {
            #defalgo IORegister,PortC:;
        }

        // -----------------------------------------------

        public static Gpio PortD()
        {
            #defalgo IORegister,PortD:;
        }

        // -----------------------------------------------

        public static int Adc1StartRegister()
        {
            #defalgo IORegister,Adc1:;
        }

        // -----------------------------------------------

        #endregion get/set

        // -----------------------------------------------

        #region methods

        // -----------------------------------------------

        //RCC_APB2ENR
        //Bit 8 ADC1EN: ADC1 clock enable
        /*
        ADC_CR2
        Bit 0 ADON: A/D Converter ON / OFF
        This bit is set and cleared by software.
        Note: 0: Disable ADC conversion and go to power down mode
        1: Enable ADC
        */
        public static bool InitAdc (  )
        {
            #defalgo IORegister,InitAdc:

            return true;
        }

        // -----------------------------------------------

        public static bool InitPort ( int port, int pin, int mode )
        {
            #defalgo IORegister,InitPort:

            return true;
        }

        // -----------------------------------------------

        public static int Read ( int port, int pin )
        {
            #defalgo IORegister,Read:;
        }

        // -----------------------------------------------

        /*
        ADC_CR1
        Bits 4:0 AWDCH[4:0]: Analog watchdog channel select bits
        These bits are set and cleared by software. They select the input channel to be guarded by
        the analog watchdog.
        Note: 00000: ADC analog input Channel0
        00001: ADC analog input Channel1
        ...
        01111: ADC analog input Channel15
        10000: ADC analog input Channel16
        10001: ADC analog input Channel17
        10010: ADC analog input Channel18
        ADC_DR // read from hier
        bit 15:0
        */
        public static int ReadAnalog ( int port, int channel )
        {
            #defalgo IORegister,Analog:;
        }

        // -----------------------------------------------

        public static bool Write ( int port, int pin, int value )
        {
            #defalgo IORegister,Write:

            return true;
        }

        // -----------------------------------------------

        #endregion methods

        // -----------------------------------------------

    }

    public enum IOValue
    {
        Low 0x0,
        High 0x1
    }

    /*public enum Registers
    {
        CRL 0x00,
        CRH 0x04,
        IDR 0x08,
        ODR 0x0C
    }*/

    public enum IORegisterMode
    {
        Read 0x0,
        Write 0x1,
        Analog 0x3
    }
}