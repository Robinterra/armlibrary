namespace "ARM.CortexM"
{
    using "System";

    public primitive class Gpio
    {

        // -----------------------------------------------

        #region vars

        // -----------------------------------------------

        public int MODER;
        public int OTYPER;
        public int OSPEEDR;
        public int PUPDR;
        public int IDR;
        public int ODR;
        public int BSRR;
        public int LCKR;
        public int AFRL;
        public int AFRH;

        // -----------------------------------------------

        #endregion vars

        // -----------------------------------------------

        #region methods

        // -----------------------------------------------

        public bool InitPort ( int pin, int mode )
        {
            int cleanpin = pin << 1;

            this.MODER = (mode << cleanpin) | this.MODER;
        }

        // -----------------------------------------------

        public bool SetPullUpPullDown ( int pin, int mode )
        {
            pin = pin << 1;

            this.PUPDR = (mode << pin) | this.PUPDR;
        }

        // -----------------------------------------------

        public bool SetSpeed ( int pin, int mode )
        {
            pin = pin << 1;

            this.OSPEEDR = (mode << pin) | this.OSPEEDR;
        }

        // -----------------------------------------------

        public bool SetOutputType ( int pin, int mode )
        {
            mode = mode & 0x1;

            this.OTYPER = (mode << pin) | this.OTYPER;
        }

        // -----------------------------------------------

        public bool Read ( int pin )
        {
            int result = this.IDR >> pin;

            return result & 0x1;
        }

        // -----------------------------------------------

        public bool Write ( int pin, int value )
        {
            int cleanvalue = value & 0x1;

            if (cleanvalue != 0x1)
            {
                cleanvalue = 1 << 0x10;
            }

            this.BSRR = cleanvalue << pin;
        }

        // -----------------------------------------------

        #endregion methods

        // -----------------------------------------------

    }

    public enum PinSpeedMode
    {
        Low = 0x0,
        Medium = 0x1,
        Fast = 0x2,
        High = 0x3
    }

    public enum PinPullUpDownMode
    {
        None = 0x0,
        PullUp = 0x1,
        PullDown = 0x2
    }

    public enum PinOutputType
    {
        PushPull = 0x0,
        OpenDrain = 0x1
    }

    public enum PinValue
    {
        Low = 0x0,
        High = 0x1
    }

    public enum PinMode
    {
        Read = 0x0,
        Write = 0x1,
        Alternative = 0x2,
        Analog = 0x3
    }
}
